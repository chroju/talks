{"version":3,"sources":["../../src/shared/rule-severity.js"],"names":["getSeverity","assert","require","ruleConfig","error","none","severity","undefined"],"mappings":"AAAA;AACA;;;;;QAQgBA,W,GAAAA,W;;;;AANhB;AAAA;AAAA;;;;AADA,IAAMC,SAASC,QAAQ,QAAR,CAAf;;AAEA;;;;;AAKO,SAASF,WAAT,CAAqBG,UAArB,EAAiC;AACpC,QAAIA,cAAc,IAAlB,EAAwB;AACpB,eAAO,kDAAcC,KAArB;AACH;AACD;AACA,QAAI,OAAOD,UAAP,KAAsB,SAA1B,EAAqC;AACjC,eAAOA,aAAa,kDAAcC,KAA3B,GAAmC,kDAAcC,IAAxD;AACH;AACD,QAAIF,WAAWG,QAAf,EAAyB;AACrBL,eAAO,kDAAcE,WAAWG,QAAzB,MAAuCC,SAA9C;AAIA,eAAO,kDAAcJ,WAAWG,QAAzB,CAAP;AACH;AACD,WAAO,kDAAcF,KAArB;AACH","file":"rule-severity.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst assert = require(\"assert\");\nimport SeverityLevel from \"./type/SeverityLevel\";\n/**\n * get severity level from ruleConfig.\n * @param {Object|boolean|undefined} ruleConfig\n * @returns {number}\n */\nexport function getSeverity(ruleConfig) {\n    if (ruleConfig == null) {\n        return SeverityLevel.error;\n    }\n    // rule:<true|false>\n    if (typeof ruleConfig === \"boolean\") {\n        return ruleConfig ? SeverityLevel.error : SeverityLevel.none;\n    }\n    if (ruleConfig.severity) {\n        assert(SeverityLevel[ruleConfig.severity] !== undefined, `please set\n\"rule-key\": {\n    \"severity\": \"<warning|error>\"\n}`);\n        return SeverityLevel[ruleConfig.severity];\n    }\n    return SeverityLevel.error;\n}\n"]}