{"version":3,"sources":["../src/IgnoreManger.js"],"names":[],"mappings":";AACA;;;;;;;;;;;;;;;IAIqB,Y;AACjB,4BAAc;AAAA;;AACV,aAAK,iBAAL,GAAyB,EAAzB;AACH;;;;uCAEc,K,EAAO;AAClB,mBAAO,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,iBAAS;AAAA,4CACnB,KADmB;;AAAA,oBACjC,KADiC;AAAA,oBAC1B,GAD0B;;AAExC,uBAAO,SAAS,KAAT,IAAkB,SAAS,GAAlC;AACH,aAHM,CAAP;AAIH;;;kCAES,I,EAAM;AACZ,gBAAM,QAAQ,KAAK,KAAnB;AACA,mBAAO,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,iBAAS;AAAA,6CACpB,KADoB;;AAAA,oBACjC,KADiC;AAAA,oBAC1B,GAD0B;;AAExC,uBAAO,SAAS,KAAT,IAAkB,SAAS,GAAlC;AACH,aAHM,CAAP;AAIH;;;gCAEO,I,EAAM;AACV,iBAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAAK,KAAjC;AACH;;;;;;kBAtBgB,Y","file":"IgnoreManger.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/**\n * 無視する範囲を管理するライブラリ\n */\nexport default class IgnoreManger {\n    constructor() {\n        this._ignoredRangeList = []\n    }\n\n    isIgnoredIndex(index) {\n        return this._ignoredRangeList.some(range => {\n            const [start, end] = range;\n            return start <= index && index <= end;\n        })\n    }\n\n    isIgnored(node) {\n        const index = node.index;\n        return this._ignoredRangeList.some(range => {\n            const [start, end] =range;\n            return start <= index && index <= end;\n        })\n    }\n\n    addNode(node) {\n        this._ignoredRangeList.push(node.range);\n    }\n}"]}