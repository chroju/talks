{"version":3,"sources":["../../src/rules/naikotoha-nai.js"],"names":[],"mappings":";AACA;;;;;;;;;;kBAMe,UAAU,OAAV,EAAmB;AAAA,QACvB,SADuB,GACV,OADU,CACvB,SADuB;;AAE9B,QAAM,sBAAsB,gCAAiB,CACzC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP;AADlB,KADyC,EAIzC;AACI,mBAAW,IADf,E;AAEI,eAAO;AAFX,KAJyC,EAQzC;AACI,wBAAgB,GADpB;AAEI,eAAO;AAFX,KARyC,EAYzC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP;;AADlB,KAZyC,CAAjB,CAA5B;AAiBA,QAAM,sBAAsB,gCAAiB,CACzC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP;AADlB,KADyC,EAIzC;AACI,mBAAW,IADf,E;AAEI,eAAO;AAFX,KAJyC,EAQzC;AACI,wBAAgB,GADpB;AAEI,eAAO;AAFX,KARyC,EAYzC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP,CADlB;AAEI,eAAO;AAFX,KAZyC,CAAjB,CAA5B;AAiBA,WAAO,UAAC,KAAD,EAAW;AACd,YAAI,oBAAoB,KAApB,CAAJ,EAAgC;AAC5B,mBAAO,IAAI,SAAJ,CAAc,gBAAd,EAAgC;AACnC,uBAAO,MAAM,aAAN,GAAsB;AADM,aAAhC,CAAP;AAGH;AACD,YAAI,oBAAoB,KAApB,CAAJ,EAAgC;AAC5B,mBAAO,IAAI,SAAJ,CAAc,gBAAd,EAAgC;AACnC,uBAAO,MAAM,aAAN,GAAsB;AADM,aAAhC,CAAP;AAGH;AACJ,KAXD;AAYH,C;;AAjDD","file":"naikotoha-nai.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n    (d)「~ないことは / もない」\n    ~ない(否定助動詞 / 否定形容詞の連体形) + 形式名詞「こと」+ とりたて助詞「は / も」+ 形容詞「ない」\n */\nimport matchTokenStream from \"./../matchTokenStream\";\nexport default function (context) {\n    const {RuleError} = context;\n    const matchPatternないことはない = matchTokenStream([\n        {\n            \"basic_form\": [\"ない\", \"無い\"]\n        },\n        {\n            \"reading\": \"コト\",// 漢字に対応するため\n            \"pos\": \"名詞\"\n        },\n        {\n            \"surface_form\": \"は\",\n            \"pos\": \"助詞\"\n        },\n        {\n            \"basic_form\": [\"ない\", \"無い\"]\n            //\"pos\": [\"形容詞\", \"助動詞\"]\n        }\n    ]);\n    const matchPatternないこともない = matchTokenStream([\n        {\n            \"basic_form\": [\"ない\", \"無い\"]\n        },\n        {\n            \"reading\": \"コト\",// 漢字に対応するため\n            \"pos\": \"名詞\"\n        },\n        {\n            \"surface_form\": \"も\",\n            \"pos\": \"助詞\"\n        },\n        {\n            \"basic_form\": [\"ない\", \"無い\"],\n            \"pos\": \"形容詞\"\n        }\n    ]);\n    return (token) => {\n        if (matchPatternないことはない(token)) {\n            return new RuleError(\"二重否定: 〜ないことはない\", {\n                index: token.word_position - 1\n            });\n        }\n        if (matchPatternないこともない(token)) {\n            return new RuleError(\"二重否定: 〜ないこともない\", {\n                index: token.word_position - 1\n            });\n        }\n    };\n}"]}