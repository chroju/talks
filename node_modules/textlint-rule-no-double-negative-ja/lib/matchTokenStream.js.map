{"version":3,"sources":["../src/matchTokenStream.js"],"names":[],"mappings":";AACA;;;;;kBAWwB,iB;AAVxB,SAAS,UAAT,CAAoB,KAApB,EAA2B,WAA3B,EAAwC;AACpC,WAAO,OAAO,IAAP,CAAY,WAAZ,EAAyB,KAAzB,CAA+B,eAAO;AACzC,YAAM,cAAc,MAAM,GAAN,CAApB;;AAEA,YAAM,iBAAiB,MAAM,OAAN,CAAc,YAAY,GAAZ,CAAd,IAAkC,YAAY,GAAZ,CAAlC,GAAqD,CAAC,YAAY,GAAZ,CAAD,CAA5E;AACA,eAAO,eAAe,IAAf,CAAoB,yBAAiB;AACxC,mBAAO,gBAAgB,aAAvB;AACH,SAFM,CAAP;AAGH,KAPM,CAAP;AAQH;AACc,SAAS,iBAAT,CAA2B,WAA3B,EAAwC;AACnD,QAAI,uBAAuB,CAA3B;AACA,QAAM,aAAa,YAAY,MAA/B;AACA,WAAO,UAAC,KAAD,EAAW;AACd,YAAM,gBAAgB,YAAY,oBAAZ,CAAtB;AACA,YAAI,WAAW,KAAX,EAAkB,aAAlB,CAAJ,EAAsC;AAClC,oCAAwB,CAAxB;AACH,SAFD,MAEO;;AAEH,mCAAuB,CAAvB;AACH;;AAED,YAAI,yBAAyB,UAA7B,EAAyC;;AAErC,mCAAuB,CAAvB;AACA,mBAAO,IAAP;AACH;AACD,eAAO,KAAP;AACH,KAfD;AAgBH","file":"matchTokenStream.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nfunction matchToken(token, expectShape) {\n    return Object.keys(expectShape).every(key => {\n        const actualValue = token[key];\n        // 値は複数の場合もある\n        const expectedValues = Array.isArray(expectShape[key]) ? expectShape[key] : [expectShape[key]];\n        return expectedValues.some(expectedValue => {\n            return actualValue === expectedValue;\n        });\n    })\n}\nexport default function expectTokenStream(tokenStream) {\n    let currentTokenPosition = 0;\n    const tokenCount = tokenStream.length;\n    return (token) => {\n        const expectedToken = tokenStream[currentTokenPosition];\n        if (matchToken(token, expectedToken)) {\n            currentTokenPosition += 1;\n        } else {\n            // restart\n            currentTokenPosition = 0;\n        }\n        // match\n        if (currentTokenPosition === tokenCount) {\n            // match -> reset\n            currentTokenPosition = 0;\n            return true;\n        }\n        return false;\n    }\n}"]}